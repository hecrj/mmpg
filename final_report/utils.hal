class Kernel:
  def paragraph section:
    p "#paragraph{%s}" % section
    hfill
    br 0.2

  def irow *cols:
    hspace "1em"
    row *cols

  def brow *cols:
    row *cols.map{ x -> bold x }

  def component task, learning, implementation, testing, integration:
    row task, ""
    irow "Learning", learning
    irow "Implementation", implementation
    irow "Testing", testing
    irow "Integration", integration

  def centered:
    p "#makebox[#textwidth]{"; yield; p "}"

  def table title, layout:
    __method_missing__ "table", options => "H":
      centering
      tabular layout: yield
      caption title
      label title

  def bold text:
    "\\textbf{%s}" % text

  def total *values, columns => 2:
    multicolumn columns - 1, "l ", bold("Total")
    values.each{ value -> write " & ", value.decimals }
    write "\n"

  def resizebox width => "!", height => "!":
    print "\\noindent\\resizebox{%s}{%s}{" % [width, height]
    yield
    print "}"

  def itemize:
    __method_missing__ :itemize:
      Itemize.new.instance_exec &yield

  def enumerate:
    __method_missing__ :enumerate:
      Itemize.new.instance_exec &yield

  def figure!:
    __method_missing__ :figure, options => "H": yield


class Number:
  def decimals:
    float.decimals


class Float:
  def decimals:
    "%.2f" % self

class Itemize:
  def item i:
    __method_missing__ :item; p i
