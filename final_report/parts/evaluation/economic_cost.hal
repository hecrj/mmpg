chapter "Economic cost"

BUDGET = budget
COST = {}

section "Hardware resources"
p "The project used the hardware resources specified in #fullref{budget}. However, a **Linode 1GB** was needed during **3 months**."

table "Hardware cost", "l | S":
  head "Hardware", "Cost (\\EURtm)"

  row "Hardware budget", BUDGET["Hardware"].decimals
  row "Linode 1GB", "27.47"

  COST["Hardware"] = BUDGET["Hardware"] + 27.47
  total COST["Hardware"], columns => 2

section "Software resources"

p "As stated in the original planning, all the software needed to develop the project can be used for free.
  #autoref{additional_software} shows additional software that was used but it was not listed in the original planning."

software = {
  "Three.js" => "https://github.com/mrdoob/three.js/blob/master/LICENSE"
}


table "Additional software", "l | l":
  head "Software", "License"

  software.each with name, license:
    row pstyle(name), "\\url{%s}" % license

COST["Software"] = BUDGET["Software"]

section "Human resources"

p "#autoref{Human resources cost} shows the final cost of the human resources according
to the final task durations detailed in #autoref{time_table} and the salary per role in #autoref{Salary per role}."

task_durations = {
  "Project management course" => 75,
  "Analysis and design"       => 10,
  "Engine"                    => 70,
  "API"                       => 50,
  "Client"                    => 30,
  "Control panel"             => 35,
  "Game example"              => 100,
  "Testing and polishing"     => 40,
  "Project memory"            => 40,
  "Oral presentation"         => 10
}

human_resources = {
  "Project manager" => {
    :payment => 35,
    :tasks   => [
      "Project management course",
      "Project memory",
      "Oral presentation"
    ]
  },
  "Software engineer"  => {
    :payment => 40,
    :tasks   => [
      "Analysis and design"
    ]
  },
  "Software developer" => {
    :payment => 30,
    :tasks => [
      "Engine",
      "API",
      "Client",
      "Control panel",
      "Game example",
      "Testing and polishing"
    ]
  }
}

table "Human resources cost", "l | l | S | S":
  head "Role", "Task", "Time (h)", "Cost (\\EURtm)"

  human_resources.each with role, data:
    multirow data[:tasks].size, "*", role

    (data[:tasks]).each with index, task:
      row "", task, task_durations[task], (task_durations[task] * data[:payment]).decimals

    hline

  hline

  COST["Human"] = human_resources.map{ _, data -> data[:tasks].map{ task -> task_durations[task] }.sum * data[:payment] }.sum
  total task_durations.values.sum, BUDGET["Human"], columns => 3

section "Other resources"

subsection "Electricity"
kwh = 0.147358

p "#autoref{Electricity cost} shows the electricity cost of the project."

electricity = {
  "Desktop computer" => {
    :consumption => 400,
    :usage       => 400
  },
  "Laptop"           => {
    :consumption => 100,
    :usage       => 50
  },
  "Monitor Acer XB270HU" => {
    :consumption => 30,
    :usage       => 400
  }
}

table "Electricity cost", "l | S | S | S":
  head "Hardware", "Consumption (W)", "Time of usage (h)", "Cost (\\EURtm)"

  electricity.each with hardware, data:
    row hardware, data[:consumption], data[:usage], ((data[:consumption] * data[:usage] / 1000.0) * kwh).decimals

  hline
  hline

  COST["Electricity"] = electricity.map{ _, data -> (data[:consumption] * data[:usage] / 1000.0) * kwh }.sum
  total COST["Electricity"], columns => 4

subsection "Internet connection"
internet_month = 38
internet_hour = internet_month / (30.0 * 24)

COST["Internet"] = internet_hour * 460 * 0.3

p "The project was developed using the internet connection described in #fullref{budget}. The internet connection was used
approximately during the 30\\% of the total project's duration, as expected.
Thus, the final cost of the internet connection was 460h $#cdot$ " + internet_hour.decimals + "\\EURtm/h $#cdot$ 0.3 $=$ **" + COST["Internet"].decimals + "\\EURtm**."

section "Total"
p "#autoref{Total cost} shows the total cost of the project."

table "Total cost", "l | S":
  head "Resource", "Total cost (\\EURtm)"

  COST.each with type, total:
    row type, total.decimals

  hline
  hline

  total COST.values.sum, columns => 2
