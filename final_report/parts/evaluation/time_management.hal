class Kernel:
  @task_durations = {
  "Project management course" => 70,
  "Analysis and design"       => 20,
  "Engine"                    => 100,
  "API"                       => 30,
  "Client"                    => 30,
  "Control panel"             => 15,
  "Game example"              => 100,
  "Testing and polishing"     => 40,
  "Project memory"            => 50,
  "Oral presentation"         => 10
}

chapter "Time management"

p "This chapter details the final time arrengement of the project and compares it with the original time planning.
It shows the final duration for every task in a timetable and a timeline of how tasks were performed, while it
also studies the dedication given to the project."

section "Time table"

figure!:
  center:
      tabular "l S S":
        head "Task", "Planned duration (h)", "Final duration (h)"

        task_durations.each with task, duration:
          row task, planned_task_durations[task], duration
        
        hline
        hline
        row "\\textbf{Total}", planned_task_durations.values.sum, task_durations.values.sum

  caption "Time table"
  label :time_table

p "#autoref{time_table} shows the final duration for every task of the project.

The main differences with the original time planning are:"

itemize:
  item "The engine took more time to implement than it was expected. Mainly because of the optimization
  performed in #autoref{whole_galaxy}."
  item "The API was implemented faster than planned. The Go programming language resulted really easy to
  learn and use, while the native libraries made the entire implementation process really productive."
  item "The control panel was integrated in the viewer, not in the Jutge.org platform. As a result,
  it took less time to implement it, as learning the Jutge.org environment was not necessary."
  item "The project memory took more time to write than expected."

section "Timeline"

figure!:
  centered:
    resizebox width => "\\textwidth":
      ganttchart 1, 25, options => "hgrid, vgrid":
        gantttitle 2015, 20; gantttitle 2016, 5
        br
        ["September", "October", "November", "December", "January"].each with month:
          gantttitle month, 5
        br
        ganttbar "Project management", 3, 11; br
        ganttbar "Analysis and design", 6, 7; br
        ganttbar "Engine", 11, 20; br;
        ganttbar "API", 11, 20; br
        ganttbar "Client", 11, 20; br
        ganttbar "Space Wars - logic", 16, 21; br
        ganttbar "Space Wars - viewer", 16, 21; br
        ganttbar "Testing and polishing", 13, 22; br
        ganttbar "Project memory", 16, 23; br
        ganttbar "Oral presentation", 24, 24

        ganttlink "elem1", "elem2"
        ganttlink "elem1", "elem3"
        ganttlink "elem1", "elem4"
        ganttlink "elem8", "elem9"

  caption "Final timeline"
  label :final_timeline

p "#autoref{final_timeline} shows the final timeline for every task of the project.

The main difference can be observed in the testing and polishing task. As the implementation methodology
used continuous integration (#autoref{methodology}), the testing and polishing of the platform has been
constant since the first prototype (#autoref{first_prototype}). Also, the different components have been developed
at the same time, in order to have a fully-functional prototype after each iteration."


section "Dedication"

p "#autoref{dedication} shows the relative amount of contributions per day to this project."

figure!:
  centered:
    includegraphics "images/dedication.png", options => "scale=0.6"

  caption "GitHub contributions to the MMPG project \\url{https://github.com/hecrj}"
  label :dedication

p "At least one contribution was made every day since the 2nd of November of 2015, with only two days being the exception.
As a consequence, the project has been in constant progress; new features were added to the fully-functional
prototype and were reported to the project advisor on a weekly basis.

Contribution peaks (*greenest squares*) happened when some important feature or optimization was implemented, which
increased the dedication to the project during a specific timeframe.

It should be noted that #autoref{dedication} does not give any type of feedback about the testing tasks performed
in the platform during its implementation.

Overall, the amount of work has been distributed properly and the project has been developed at a steady pace."
