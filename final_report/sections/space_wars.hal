chapter "Space Wars"

p "**Space Wars** will be the first game using the MMPG platform. It is inspired by **Galcon** #cite{galcon}
and **Planet Wars** #cite{planet_wars}. These games were chosen because they seem to have **simple rules**, but they
also seem **easy to extend**. This way, development can start with the implementation of the original game rules while
new ideas to **increase the game size** and make it **massive** can be added later."

section "Logic"

indent; p "The game logic has currently **one feature**:"

description:
  item "Pseudo-randomly generated planetary systems"; p "The game world is randomly generated. The current algorithm
  chooses the **size of the sun**, **number of planets**, and the **size**, **orbit** and **position** of every planet.
  Finally, it generates a **connected graph of planets**, where an edge represents a path between the two nodes."

p "However, these are the features that are expected to be available **before the year ends**:"

description:
  item "Space ships"; p "Planets can be **conquered** by space ships. Conquered planets **generate** space ships."
  item "Multiple systems"; p "The game will take place in multiple planetary systems connected by **mass relays**."
  item "Mass relays"; p "Nodes that allow ships to **travel between planetary systems**."
  item "Score system"; p "Players with more conquered planets will obtain higher scores."

clearpage

section "Viewer"

p "Currently, the **Space Wars viewer** supports these features:"

description:
  item "Planetary system rendering"; p "The game world generated by the game logic is rendered using **|WebGL|**,
  as shown in #autoref{planets}."
  item "Login"; p "Players can be authenticated using a login form. The session is saved in the browser's
  **local storage**.
  See #autoref{login_form}."
  item "Player deployment"; p "Authenticated players can **deploy a new version of their program** and receive feedback
  in **real-time** of the deployment process. See #autoref{deploy_error}."
  item "Game time control"; p "There is a widget that allows viewers to watch the **previous events of the
  current match**. See #autoref{game_time}."

indent; p "By the end of the project, the viewer is **expected to support**:"

description:
  item "Camera movement"; p "The camera will **move** using the |W|, |A|, |S|, |D| keys."
  item "Game rendering"; p "Space ships, mass relays and solar systems will be rendered properly to **reflect the
  state of the game world**."
  item "Control panel"; p "Administrators will have access to a panel to **control the current match** and, possibly,
  **monitor the players' status**."

figure!:
  resizebox width => "\\textwidth":
    includegraphics "images/planets.png"

  caption "Planetary system"
  label :planets

figure!:
  centered:
    resizebox height => "250pt":
      includegraphics "images/login_ok.png"

    resizebox height => "250pt":
      includegraphics "images/login_error.png"

  caption "Login form. Valid (left). Invalid (right)"
  label :login_form

figure!:
  centered:
    minipage ".5\\textwidth":
      figure!:
        centered:
          resizebox height => "250pt":
            includegraphics "images/deploy_error.png"
        caption "Player deployment with a compiling error"
        label :deploy_error

    minipage ".5\\textwidth":
      figure!:
        centered:
          resizebox height => "100pt":
            includegraphics "images/game_time.png"

        caption "Game time"
        label :game_time
